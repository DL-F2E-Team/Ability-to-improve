(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{219:function(t,s,e){"use strict";e.r(s);var a=e(0),n=Object(a.a)({},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"ecmascript"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ecmascript"}},[t._v("#")]),t._v(" ECMAScript")]),t._v(" "),e("h2",{attrs:{id:"基础"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#基础"}},[t._v("#")]),t._v(" 基础")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("JavaScript是"),e("strong",[t._v("弱类型")]),t._v("语言，广义的JavaScript是指："),e("code",[t._v("ECMAScript")]),t._v("、"),e("code",[t._v("文档对象模型【DOM】")]),t._v("、"),e("code",[t._v("游览器对象模型【BOM】")]),t._v("。")])]),t._v(" "),e("li",[e("p",[t._v("数据类型")]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("基本数据类型")]),t._v("："),e("strong",[t._v("数字")]),t._v("、"),e("strong",[t._v("字符串")]),t._v("、"),e("strong",[t._v("Boolean")]),t._v("、"),e("strong",[t._v("undefined")]),t._v("、"),e("strong",[t._v("null")]),t._v("、"),e("strong",[t._v("symbol")]),t._v("【ES6新增】")]),t._v(" "),e("li",[e("strong",[t._v("引用数据类型")]),t._v("："),e("strong",[t._v("Object")]),t._v("对象包括【function、array】")])])]),t._v(" "),e("li",[e("p",[t._v("原生函数【内建函数】：String、Number、Boolean、Array、Object、Function、RegExp、Date、Error、Symbol")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("forEach")]),t._v(" - forEach中return有效果吗？如何中断forEach循环？")]),t._v(" "),e("ul",[e("li",[t._v("forEach中return"),e("strong",[t._v("无效果")])]),t._v(" "),e("li",[t._v("中断forEach\n"),e("ol",[e("li",[t._v("使用try catch中断，抛出异常")]),t._v(" "),e("li",[t._v("官方推荐：使用every和some替代forEach."),e("code",[t._v("every")]),t._v("在碰到"),e("code",[t._v("return false")]),t._v("的时候，中止循环。"),e("code",[t._v("some")]),t._v("在碰到"),e("code",[t._v("return true")]),t._v("的时候，中止循环")])])])])]),t._v(" "),e("li",[e("p",[e("code",[t._v("undefined")]),t._v(" 和 "),e("code",[t._v("is not defined")]),t._v(" 是两回事，前者已声明未赋值，后者未声明。")])]),t._v(" "),e("li",[e("p",[t._v("稀疏数组与密集数组")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("void")])])]),t._v(" "),e("li",[e("p",[t._v("获取封装对象的值："),e("code",[t._v("valueOf")])])]),t._v(" "),e("li",[e("p",[e("code",[t._v("Date.now()")]),t._v(" === "),e("code",[t._v("(new Date()).getTime()")])])]),t._v(" "),e("li",[e("p",[t._v("抛出异常 - "),e("code",[t._v("throw new Error ('')")])])]),t._v(" "),e("li",[e("p",[t._v("类型转换")]),t._v(" "),e("ul",[e("li",[t._v("隐式强制类型转换("),e("code",[t._v("valueOf()")]),t._v("，"),e("code",[t._v("toString()")]),t._v(") - 什么情况下 "),e("code",[t._v("a == 1 && a == 2 && a == 3")]),t._v(" 返回 "),e("code",[t._v("true")]),t._v("？")]),t._v(" "),e("li",[t._v("显式强制类转换：假值 - "),e("code",[t._v("undefined")]),t._v(" "),e("code",[t._v("null")]),t._v(" "),e("code",[t._v("false")]),t._v(" "),e("code",[t._v("+0")]),t._v(" "),e("code",[t._v("-0")]),t._v(" "),e("code",[t._v("NaN")]),t._v(" "),e("code",[t._v("''")])]),t._v(" "),e("li",[e("code",[t._v("+")]),t._v("一元运算符能将字符串快速转换为数字，并且将日期转换为时间戳")]),t._v(" "),e("li",[t._v("+、~~【转为数字0和1】、!!【转为boolean】的妙用、||、&&的使用简写、==和===的区别")]),t._v(" "),e("li",[e("code",[t._v("[]+{} === [object Object]")]),t._v("、"),e("code",[t._v("{}+[] === 0")]),t._v("、"),e("code",[t._v("!+[] === true")])])])]),t._v(" "),e("li",[e("p",[t._v("运算符优先级 "),e("code",[t._v("&&")]),t._v(" > "),e("code",[t._v("||")]),t._v(" > "),e("code",[t._v("(? : 【右关联】)")]),t._v(" "),e("code",[t._v("=【右关联】")]),t._v(" >  "),e("code",[t._v(",")])])]),t._v(" "),e("li",[e("p",[e("code",[t._v("JSON.stringify()")])]),t._v(" "),e("ul",[e("li",[t._v("无法处理："),e("code",[t._v("undefined")]),t._v("，"),e("code",[t._v("function")]),t._v("，"),e("code",[t._v("symbol")]),t._v("。")]),t._v(" "),e("li",[t._v("该方法可以接受第二个参数JSON.stringify(a, {b,c}, num)")])])]),t._v(" "),e("li",[e("p",[t._v("语句（声明语句）、表达式（赋值表达式）。表达式语句（b）")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("try…catch…finally")])])]),t._v(" "),e("li",[e("p",[t._v("HTML元素id也会为自身创建全局变量")])]),t._v(" "),e("li",[e("p",[t._v("变量、（变量声明、变量赋值）=> 变量的初始化、变量提升")])]),t._v(" "),e("li",[e("p",[t._v("清内存，赋值为null")])]),t._v(" "),e("li",[e("p",[t._v("类，类的继承，super")])]),t._v(" "),e("li",[e("p",[t._v("继承")])]),t._v(" "),e("li",[e("p",[t._v("红黑树算法，二叉树算法")])]),t._v(" "),e("li",[e("p",[t._v("函数声明 、函数表达式（声明提升）")])]),t._v(" "),e("li",[e("p",[t._v("高阶函数、纯函数、函数柯里化")])]),t._v(" "),e("li",[e("p",[t._v("面向对象编程、面向函数编程")])]),t._v(" "),e("li",[e("p",[t._v("set")])]),t._v(" "),e("li",[e("p",[t._v("修饰器 - 编译时执行的函数")])]),t._v(" "),e("li",[e("p",[t._v("AMD/CMD、commonjs")])]),t._v(" "),e("li",[e("p",[t._v("匿名函数")])]),t._v(" "),e("li",[e("p",[t._v("隐式换算")])]),t._v(" "),e("li",[e("p",[t._v("JavaScript 中的迭代器（iterators）和迭代（iterables）是什么？ 你知道什么是内置迭代器吗？")])]),t._v(" "),e("li",[e("p",[t._v("JSON.parse(JSON.stringify(Obejct))的注意点")])]),t._v(" "),e("li",[e("p",[t._v("单向数据流和双向数据绑定")])]),t._v(" "),e("li",[e("p",[t._v("httpXMLrequest、fetch、axios、ajax")])]),t._v(" "),e("li",[e("p",[t._v("使用单页应用将文件上传到服务器的有哪些方法(XMLHttpRequest2（streaming），fetch（non-streaming），File API)")])])]),t._v(" "),e("h2",{attrs:{id:"数据类型检测"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#数据类型检测"}},[t._v("#")]),t._v(" 数据类型检测")]),t._v(" "),e("h3",{attrs:{id:"typeof"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#typeof"}},[t._v("#")]),t._v(" typeof")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("div",{staticClass:"highlight-lines"},[e("br"),e("br"),e("br"),e("br"),e("br"),e("div",{staticClass:"highlighted"},[t._v(" ")]),e("br"),e("br"),e("br"),e("br"),e("br"),e("br")]),e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("typeof 5            // number\ntypeof '5'          // string\ntypeof undefined    // undefined\ntypeof false        // boolean\ntypeof Symbol()     // symbol\ntypeof null         // object\ntypeof NaN          // number\n\ntypeof [1]          // object\ntypeof {}           // object\ntypeof console.log  // function\n")])]),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br")])]),e("ul",[e("li",[t._v("判断null："),e("code",[t._v("(!null && typeof null === 'object')")])]),t._v(" "),e("li",[t._v("判断数组：\n"),e("ul",[e("li",[t._v("Array.isArray()")]),t._v(" "),e("li",[t._v("[] instanceof Array")]),t._v(" "),e("li",[t._v("Object.prototype.toString.call([]) === '[object Array]'")]),t._v(" "),e("li",[t._v("Object.prototype.toString.call({}) === '[object Object]'")]),t._v(" "),e("li",[t._v("[].constructor === Array")])])])]),t._v(" "),e("div",{staticClass:"custom-block warning"},[e("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),e("p",[t._v("typeof()是判断基本类型的。对于引用类型，除function，都返回object【null返回object】。")])]),t._v(" "),e("h3",{attrs:{id:"instanceof"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#instanceof"}},[t._v("#")]),t._v(" instanceof")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("const p1 = new Person()\np1 instanceof Person    // true\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br")])]),e("h2",{attrs:{id:"bind、call和apply区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#bind、call和apply区别"}},[t._v("#")]),t._v(" "),e("code",[t._v("bind")]),t._v("、"),e("code",[t._v("call")]),t._v("和"),e("code",[t._v("apply")]),t._v("区别")]),t._v(" "),e("p",[t._v("三者都是用来改变this指向的。")]),t._v(" "),e("p",[e("code",[t._v("bind")]),t._v("是返回一个"),e("strong",[t._v("新的可执行的")]),t._v("函数，第一个参数是要指向的对象，第二个参数是"),e("strong",[t._v("绑定时候参数的顺序以及新可执行函数的参数作为原函数的参数来调用原函数")]),t._v("。")]),t._v(" "),e("p",[e("code",[t._v("call")]),t._v("和"),e("code",[t._v("apply")]),t._v("都是执行函数，第一个参数是需要指向的对象，第二参数不同，call需要把参数"),e("strong",[t._v("按顺序依次传递")]),t._v("，apply则是把参数"),e("strong",[t._v("放在数组里")]),t._v("。")]),t._v(" "),e("p",[t._v("如果 call和apply的第一个参数是null或者undefined，那么this的指向就是全局变量，在游览器里面就是windows。")]),t._v(" "),e("h2",{attrs:{id:"闭包"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#闭包"}},[t._v("#")]),t._v(" 闭包")]),t._v(" "),e("p",[e("strong",[t._v("可以访问其他函数内变量的函数")]),t._v("，叫做闭包。或者说在一个函数内部可访问该函数内部局部变量的函数，作用就是让函数外部可以访问函数内部局部变量。")]),t._v(" "),e("p",[t._v("闭包可以用来保存一个需要持久保存的变量，可以模拟命名空间。")]),t._v(" "),e("p",[t._v("闭包在IE会造成"),e("strong",[t._v("内存泄露")]),t._v("（IE BUG）")]),t._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" ex "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("bar")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            ex"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" ex\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" bar\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" func "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("func")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br")])]),e("div",{staticClass:"custom-block warning"},[e("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),e("p",[t._v("IIFE是闭包吗？\n严格来讲IIFE并不算闭包，因为函数并没用在本身的词法作用域以外执行。")])]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("资料库")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/22486908",target:"_blank",rel:"noopener noreferrer"}},[t._v("「每日一题」JS 中的闭包是什么？- 知乎"),e("OutboundLink")],1)])]),t._v(" "),e("h2",{attrs:{id:"es6"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#es6"}},[t._v("#")]),t._v(" ES6")]),t._v(" "),e("ul",[e("li",[e("p",[e("code",[t._v("let")]),t._v("、"),e("code",[t._v("const")])])]),t._v(" "),e("li",[e("p",[t._v("箭头函数 "),e("code",[t._v("() => {}")])])]),t._v(" "),e("li",[e("p",[e("code",[t._v("class")]),t._v("、"),e("code",[t._v("class <name> extend <parent>")])])]),t._v(" "),e("li",[e("p",[t._v("yield")])])]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("5. 对象初始化\n6. 简写方法名 const object = {functionName () {}}\n7.  装饰器写法（修饰器decorator => ES6）（@connet）\n8.  赋值解构\n9.  rest\n10. import、export\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br")])]),e("h3",{attrs:{id:"object"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#object"}},[t._v("#")]),t._v(" Object")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("1.  Object.keys(obj)\n2. Object.create()\n3.  Object.assign()\n4.  Object.defineProperty(obj, key, props)\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br")])]),e("h3",{attrs:{id:"number"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#number"}},[t._v("#")]),t._v(" Number")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("1. Number.prototype.toPrecision()\n2. 数字的安全范围：Number.MAX_SAFE_INTEGER、Number.MIN_SAFE_INTEGER\n3. Number.isInteger()\n4. window.isNaN()和Number.isNaN() 在不是数字类型下返回的结果不同：isNaN(‘A') // true，Number.isNaN(‘A’) // false\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br")])]),e("h3",{attrs:{id:"string"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#string"}},[t._v("#")]),t._v(" String")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("1. String.prototype.indexOf()\n2. String.prototype.charAt()\n3. String.prototype.substr()、String.prototype.substring()、String.prototype.slice()\n4. String.prototype.toUpperCase()、String.prototype.toLowerCase()\n5. String.prototype.trim()\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br")])]),e("h2",{attrs:{id:"dom"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#dom"}},[t._v("#")]),t._v(" DOM")]),t._v(" "),e("h3",{attrs:{id:"dom-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#dom-2"}},[t._v("#")]),t._v(" DOM")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("1. nodeType(1,2,3)\n2. nodeName\n3.  nodeValue\n4.  firstChild\n5.  attributes => removeAttribute & addAttribute\n6.  createDocumentFragment\n7.  appendChild\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br")])]),e("h3",{attrs:{id:"todo"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#todo"}},[t._v("#")]),t._v(" TODO")]),t._v(" "),e("ul",[e("li",[t._v("函数")]),t._v(" "),e("li",[t._v("变量提升")]),t._v(" "),e("li",[t._v("回收机制")])]),t._v(" "),e("h2",{attrs:{id:"常见的设计模式有哪些？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#常见的设计模式有哪些？"}},[t._v("#")]),t._v(" 常见的设计模式有哪些？")]),t._v(" "),e("p",[t._v("1、js工厂模式\n2、js构造函数模式\n3、js原型模式\n4、构造函数+原型的js混合模式\n5、构造函数+原型的动态原型模式\n6、观察者模式\n7、发布订阅模式")]),t._v(" "),e("h2",{attrs:{id:"settimeout倒计时为什么会出现误差？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#settimeout倒计时为什么会出现误差？"}},[t._v("#")]),t._v(" setTimeout倒计时为什么会出现误差？")]),t._v(" "),e("p",[t._v("setTimeout() 只是将事件插入了“任务队列”，必须等当前代码（执行栈）执行完，主线程才会去执行它指定的回调函数。要是当前代码消耗时间很长，也有可能要等很久，所以并没办法保证回调函数一定会在 setTimeout() 指定的时间执行。所以， setTimeout() 的第二个参数表示的是最少时间，并非是确切时间。\nHTML5标准规定了 setTimeout() 的第二个参数的最小值不得小于4毫秒，如果低于这个值，则默认是4毫秒。在此之前。老版本的浏览器都将最短时间设为10毫秒。另外，对于那些DOM的变动（尤其是涉及页面重新渲染的部分），通常是间隔16毫秒执行。这时使用 requestAnimationFrame() 的效果要好于 setTimeout();")]),t._v(" "),e("p",[t._v("断点续传？\nHTTP1.1协议（RFC2616）中定义了断点续传相关的HTTP头 Range和Content-Range字段，一个最简单的断点续传实现大概如下：\n1.客户端下载一个1024K的文件，已经下载了其中512K\n2. 网络中断，客户端请求续传，因此需要在HTTP头中申明本次需要续传的片段：\nRange:bytes=512000-\n这个头通知服务端从文件的512K位置开始传输文件\n3. 服务端收到断点续传请求，从文件的512K位置开始传输，并且在HTTP头中增加：\nContent-Range:bytes 512000-/1024000")])])},[],!1,null,null,null);s.default=n.exports}}]);