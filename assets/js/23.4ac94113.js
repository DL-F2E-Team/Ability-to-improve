(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{206:function(s,t,a){"use strict";a.r(t);var n=a(0),e=Object(n.a)({},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"ecmascript"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ecmascript"}},[s._v("#")]),s._v(" ECMAScript")]),s._v(" "),a("p",[s._v("JavaScript 是"),a("strong",[s._v("弱类型")]),s._v("语言，通常所说的 JavaScript 是指"),a("code",[s._v("ECMAScript")]),s._v("、"),a("code",[s._v("DOM【文档对象模型】")]),s._v("和"),a("code",[s._v("BOM【游览器对象模型】")]),s._v("。")]),s._v(" "),a("p",[s._v("数据类型可分为"),a("strong",[s._v("基本数据类型")]),s._v("："),a("strong",[s._v("数字")]),s._v("、"),a("strong",[s._v("字符串")]),s._v("、"),a("strong",[s._v("Boolean")]),s._v("、"),a("strong",[s._v("undefined")]),s._v("、"),a("strong",[s._v("null")]),s._v("、"),a("strong",[s._v("symbol")]),s._v("和"),a("strong",[s._v("引用数据类型")]),s._v("："),a("strong",[s._v("Object")]),s._v("对象包括【function、array】。")]),s._v(" "),a("p",[a("code",[s._v("undefined")]),s._v(" 和 "),a("code",[s._v("is not defined")]),s._v(" 是两回事，前者已声明未赋值，后者未声明。")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/void",target:"_blank",rel:"noopener noreferrer"}},[s._v("void运算符"),a("OutboundLink")],1),s._v("会对它的操作数表达式进行求值，然后忽略掉求值的结果，直接返回"),a("code",[s._v("undefined")]),s._v("。譬如："),a("code",[s._v('<a href="javascript:void(0)">Hi</a>')])]),s._v(" "),a("p",[a("code",[s._v("Object.prototype.valueOf()")]),s._v("获取封装对象的值。")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Object：返回对象本身")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"张三"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" age"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("18")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("valueOf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" obj "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// true")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[a("code",[s._v("Date.now()")]),s._v(" === "),a("code",[s._v("(new Date()).getTime()")]),s._v(" === "),a("code",[s._v("+new Date()")]),s._v("都是转换成时间戳。")]),s._v(" "),a("p",[a("code",[s._v("throw new Error ('错误信息')")]),s._v("抛出异常。一般与错误处理一起使用："),a("code",[s._v("try…catch…finally")]),s._v("。")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("try")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 可能发生错误的代码")]),s._v("\n   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// todo something")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("catch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("err"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 只有发生错误时才执行的代码")]),s._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("throw")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Error")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'错误信息'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("finally")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 无论是否出错，肯定都要执行的代码")]),s._v("\n   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// todo other things")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("p",[s._v("HTML元素id也会为自身创建全局变量")]),s._v(" "),a("p",[s._v("清内存，赋值为null。游览器的垃圾回收机制使用了引用计数法（引用下标计数法，为0则标识不使用。）")]),s._v(" "),a("p",[s._v("【语句（声明语句）、表达式（赋值表达式）、表达式语句】一个表达式会产生一个值,它可以放在任何需要一个值的地方，如语句则是由分号分隔的句子或命令。如果在表达式后面加上一个“；”分隔符，这就被称为“表达式语句”。\n它表明“只有表达式，而没有其他语法元素的语句”。")]),s._v(" "),a("ul",[a("li",[s._v("原生函数【内建函数】：String、Number、Boolean、Array、Object、Function、RegExp、Date、Error、Symbol")]),s._v(" "),a("li",[a("code",[s._v("forEach")]),s._v(" "),a("ul",[a("li",[a("strong",[s._v("forEach中return有效果吗？")]),s._v(" "),a("ul",[a("li",[s._v("forEach中return"),a("strong",[s._v("无效果")])])])]),s._v(" "),a("li",[a("strong",[s._v("如何中断forEach循环？")]),s._v(" "),a("ol",[a("li",[s._v("使用try catch中断，抛出异常")]),s._v(" "),a("li",[s._v("官方推荐：使用every和some替代forEach."),a("code",[s._v("every")]),s._v("在碰到"),a("code",[s._v("return false")]),s._v("的时候，中止循环。"),a("code",[s._v("some")]),s._v("在碰到"),a("code",[s._v("return true")]),s._v("的时候，中止循环")])])])])]),s._v(" "),a("li",[s._v("运算符优先级 "),a("code",[s._v("&&")]),s._v(" > "),a("code",[s._v("||")]),s._v(" > "),a("code",[s._v("(? : 【右关联】)")]),s._v(" "),a("code",[s._v("=【右关联】")]),s._v(" >  "),a("code",[s._v(",")])]),s._v(" "),a("li",[a("code",[s._v("JSON.stringify()")]),s._v(" "),a("ul",[a("li",[s._v("JSON.parse(JSON.stringify(Obejct))的注意点")]),s._v(" "),a("li",[s._v("无法处理："),a("code",[s._v("NaN")]),s._v("、"),a("code",[s._v("RegExp")]),s._v("、"),a("code",[s._v("Error")]),s._v("、"),a("code",[s._v("undefined")]),s._v("，"),a("code",[s._v("function")]),s._v("，"),a("code",[s._v("symbol")]),s._v("。")]),s._v(" "),a("li",[s._v("该方法可以接受第二个参数JSON.stringify(a, {b,c}, num)")])])]),s._v(" "),a("li",[s._v("变量、（变量声明、变量赋值）=> 变量的初始化、变量提升")]),s._v(" "),a("li",[s._v("类，类的继承，super")]),s._v(" "),a("li",[s._v("继承")]),s._v(" "),a("li",[s._v("红黑树算法，二叉树算法")]),s._v(" "),a("li",[s._v("函数声明 、函数表达式（声明提升）")]),s._v(" "),a("li",[s._v("高阶函数、纯函数、函数柯里化")]),s._v(" "),a("li",[s._v("面向对象编程、面向函数编程")]),s._v(" "),a("li",[s._v("set")]),s._v(" "),a("li",[s._v("修饰器 - 编译时执行的函数")]),s._v(" "),a("li",[s._v("AMD/CMD、commonjs")]),s._v(" "),a("li",[s._v("匿名函数")]),s._v(" "),a("li",[s._v("JavaScript 中的迭代器（iterators）和迭代（iterables）是什么？ 你知道什么是内置迭代器吗？")])]),s._v(" "),a("h2",{attrs:{id:"类型转换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#类型转换"}},[s._v("#")]),s._v(" 类型转换")]),s._v(" "),a("p",[s._v("类型转换分为"),a("strong",[s._v("隐式类型转换【隐式换算】"),a("strong",[s._v("和")]),s._v("显示类型转换")]),s._v("。")]),s._v(" "),a("p",[s._v("什么情况下 "),a("code",[s._v("a == 1 && a == 2 && a == 3")]),s._v(" 返回 "),a("code",[s._v("true")]),s._v("？隐式强制类型转换("),a("code",[s._v("valueOf()")]),s._v("，"),a("code",[s._v("toString()")]),s._v(")")]),s._v(" "),a("p",[s._v("显式强制类转换：假值 - "),a("code",[s._v("undefined")]),s._v(" "),a("code",[s._v("null")]),s._v(" "),a("code",[s._v("false")]),s._v(" "),a("code",[s._v("+0")]),s._v(" "),a("code",[s._v("-0")]),s._v(" "),a("code",[s._v("NaN")]),s._v(" "),a("code",[s._v("''")]),s._v(","),a("code",[s._v("Number(...)")])]),s._v(" "),a("p",[a("code",[s._v("+")]),s._v("一元运算符能将字符串快速转换为数字，并且将日期转换为时间戳。")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Hello World'")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Hello World")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Hello World'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// NaN ")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("+、~~【转为数字0和1】、!!【转为boolean】的妙用、||、&&的使用简写、==和===的区别")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// []转换成""，+{}转换成[object Object]')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'[object Object]'")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// {}转换成块级作用域，+[]转换成0")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// +[]转换成0,和!在一起又转换成true,再取反")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("h2",{attrs:{id:"数据类型检测"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据类型检测"}},[s._v("#")]),s._v(" 数据类型检测")]),s._v(" "),a("h3",{attrs:{id:"typeof"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#typeof"}},[s._v("#")]),s._v(" typeof")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("div",{staticClass:"highlight-lines"},[a("br"),a("br"),a("br"),a("br"),a("br"),a("div",{staticClass:"highlighted"},[s._v(" ")]),a("br"),a("br"),a("br"),a("br"),a("br"),a("br")]),a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("typeof 5            // number\ntypeof '5'          // string\ntypeof undefined    // undefined\ntypeof false        // boolean\ntypeof Symbol()     // symbol\ntypeof null         // object\ntypeof NaN          // number\n\ntypeof [1]          // object\ntypeof {}           // object\ntypeof console.log  // function\n")])]),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("ul",[a("li",[s._v("判断null："),a("code",[s._v("(!null && typeof null === 'object')")])]),s._v(" "),a("li",[s._v("判断数组：\n"),a("ul",[a("li",[s._v("Array.isArray()")]),s._v(" "),a("li",[s._v("[] instanceof Array")]),s._v(" "),a("li",[s._v("Object.prototype.toString.call([]) === '[object Array]'")]),s._v(" "),a("li",[s._v("Object.prototype.toString.call({}) === '[object Object]'")]),s._v(" "),a("li",[s._v("[].constructor === Array")])])])]),s._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[s._v("注意")]),s._v(" "),a("p",[s._v("typeof()是判断基本类型的。对于引用类型，除function，都返回object【null返回object】。")])]),s._v(" "),a("h3",{attrs:{id:"instanceof"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#instanceof"}},[s._v("#")]),s._v(" instanceof")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("const p1 = new Person()\np1 instanceof Person    // true\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h2",{attrs:{id:"bind、call和apply区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bind、call和apply区别"}},[s._v("#")]),s._v(" "),a("code",[s._v("bind")]),s._v("、"),a("code",[s._v("call")]),s._v("和"),a("code",[s._v("apply")]),s._v("区别")]),s._v(" "),a("p",[s._v("三者都是用来改变this指向的。")]),s._v(" "),a("p",[a("code",[s._v("bind")]),s._v("是返回一个"),a("strong",[s._v("新的可执行的")]),s._v("函数，第一个参数是要指向的对象，第二个参数是"),a("strong",[s._v("绑定时候参数的顺序以及新可执行函数的参数作为原函数的参数来调用原函数")]),s._v("。")]),s._v(" "),a("p",[a("code",[s._v("call")]),s._v("和"),a("code",[s._v("apply")]),s._v("都是执行函数，第一个参数是需要指向的对象，第二参数不同，call需要把参数"),a("strong",[s._v("按顺序依次传递")]),s._v("，apply则是把参数"),a("strong",[s._v("放在数组里")]),s._v("。")]),s._v(" "),a("p",[s._v("如果 call和apply的第一个参数是null或者undefined，那么this的指向就是全局变量，在游览器里面就是windows。")]),s._v(" "),a("h2",{attrs:{id:"闭包"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#闭包"}},[s._v("#")]),s._v(" 闭包")]),s._v(" "),a("p",[a("strong",[s._v("可以访问其他函数内变量的函数")]),s._v("，叫做闭包。或者说在一个函数内部可访问该函数内部局部变量的函数，作用就是让函数外部可以访问函数内部局部变量。")]),s._v(" "),a("p",[s._v("闭包可以用来保存一个需要持久保存的变量，可以模拟命名空间。")]),s._v(" "),a("p",[s._v("闭包在IE会造成"),a("strong",[s._v("内存泄露")]),s._v("（IE BUG）")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("foo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" ex "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("bar")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            ex"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" ex\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" bar\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" func "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("func")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[s._v("注意")]),s._v(" "),a("p",[s._v("IIFE是闭包吗？\n严格来讲IIFE并不算闭包，因为函数并没用在本身的词法作用域以外执行。")])]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("资料库")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/22486908",target:"_blank",rel:"noopener noreferrer"}},[s._v("「每日一题」JS 中的闭包是什么？- 知乎"),a("OutboundLink")],1)])]),s._v(" "),a("h2",{attrs:{id:"es6"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#es6"}},[s._v("#")]),s._v(" ES6")]),s._v(" "),a("ul",[a("li",[a("p",[a("code",[s._v("let")]),s._v("、"),a("code",[s._v("const")])])]),s._v(" "),a("li",[a("p",[s._v("箭头函数 "),a("code",[s._v("() => {}")])])]),s._v(" "),a("li",[a("p",[a("code",[s._v("class")]),s._v("、"),a("code",[s._v("class <name> extend <parent>")])])]),s._v(" "),a("li",[a("p",[s._v("yield")])])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("5. 对象初始化\n6. 简写方法名 const object = {functionName () {}}\n7.  装饰器写法（修饰器decorator => ES6）（@connet）\n8.  赋值解构\n9.  rest\n10. import、export\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("h3",{attrs:{id:"object"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#object"}},[s._v("#")]),s._v(" Object")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("1.  Object.keys(obj)\n2. Object.create()\n3.  Object.assign()\n4.  Object.defineProperty(obj, key, props)\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("h3",{attrs:{id:"number"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#number"}},[s._v("#")]),s._v(" Number")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("1. Number.prototype.toPrecision()\n2. 数字的安全范围：Number.MAX_SAFE_INTEGER、Number.MIN_SAFE_INTEGER\n3. Number.isInteger()\n4. window.isNaN()和Number.isNaN() 在不是数字类型下返回的结果不同：isNaN(‘A') // true，Number.isNaN(‘A’) // false\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("h3",{attrs:{id:"string"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#string"}},[s._v("#")]),s._v(" String")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("1. String.prototype.indexOf()\n2. String.prototype.charAt()\n3. String.prototype.substr()、String.prototype.substring()、String.prototype.slice()\n4. String.prototype.toUpperCase()、String.prototype.toLowerCase()\n5. String.prototype.trim()\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("h2",{attrs:{id:"dom"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dom"}},[s._v("#")]),s._v(" DOM")]),s._v(" "),a("h3",{attrs:{id:"dom-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dom-2"}},[s._v("#")]),s._v(" DOM")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("1. nodeType(1,2,3)\n2. nodeName\n3.  nodeValue\n4.  firstChild\n5.  attributes => removeAttribute & addAttribute\n6.  createDocumentFragment\n7.  appendChild\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("h3",{attrs:{id:"todo"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#todo"}},[s._v("#")]),s._v(" TODO")]),s._v(" "),a("ul",[a("li",[s._v("函数")]),s._v(" "),a("li",[s._v("变量提升")]),s._v(" "),a("li",[s._v("回收机制")])]),s._v(" "),a("h2",{attrs:{id:"常见的设计模式有哪些？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常见的设计模式有哪些？"}},[s._v("#")]),s._v(" 常见的设计模式有哪些？")]),s._v(" "),a("p",[s._v("1、js工厂模式\n2、js构造函数模式\n3、js原型模式\n4、构造函数+原型的js混合模式\n5、构造函数+原型的动态原型模式\n6、观察者模式\n7、发布订阅模式")]),s._v(" "),a("h2",{attrs:{id:"settimeout倒计时为什么会出现误差？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#settimeout倒计时为什么会出现误差？"}},[s._v("#")]),s._v(" setTimeout倒计时为什么会出现误差？")]),s._v(" "),a("p",[s._v("setTimeout() 只是将事件插入了“任务队列”，必须等当前代码（执行栈）执行完，主线程才会去执行它指定的回调函数。要是当前代码消耗时间很长，也有可能要等很久，所以并没办法保证回调函数一定会在 setTimeout() 指定的时间执行。所以， setTimeout() 的第二个参数表示的是最少时间，并非是确切时间。\nHTML5标准规定了 setTimeout() 的第二个参数的最小值不得小于4毫秒，如果低于这个值，则默认是4毫秒。在此之前。老版本的浏览器都将最短时间设为10毫秒。另外，对于那些DOM的变动（尤其是涉及页面重新渲染的部分），通常是间隔16毫秒执行。这时使用 requestAnimationFrame() 的效果要好于 setTimeout();")]),s._v(" "),a("p",[s._v("断点续传？\nHTTP1.1协议（RFC2616）中定义了断点续传相关的HTTP头 Range和Content-Range字段，一个最简单的断点续传实现大概如下：\n1.客户端下载一个1024K的文件，已经下载了其中512K\n2. 网络中断，客户端请求续传，因此需要在HTTP头中申明本次需要续传的片段：\nRange:bytes=512000-\n这个头通知服务端从文件的512K位置开始传输文件\n3. 服务端收到断点续传请求，从文件的512K位置开始传输，并且在HTTP头中增加：\nContent-Range:bytes 512000-/1024000")])])},[],!1,null,null,null);t.default=e.exports}}]);